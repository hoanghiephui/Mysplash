apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao'


static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.wallpapers.unsplash"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = outputFile.name.replace("app",
                                "${defaultConfig.applicationId}_${defaultConfig.versionName}_${releaseTime()}")
                        output.outputFileName = fileName
                    }
                }
            }
        }
        buildTypes.each {
            it.buildConfigField 'String', 'APP_ID_BETA', APP_ID_BETA
            it.buildConfigField 'String', 'SECRET_BETA', SECRET_BETA
            it.buildConfigField 'String', 'APP_ID_RELEASE', APP_ID_RELEASE
            it.buildConfigField 'String', 'SECRET_RELEASE', SECRET_RELEASE

            it.buildConfigField 'String', 'FEED_TOKEN', FEED_TOKEN

            it.buildConfigField 'String', 'APP_ID_RELEASE_UNAUTH', APP_ID_RELEASE_UNAUTH
            it.buildConfigField 'String', 'GET_STREAM_KEY', GET_STREAM_KEY
            it.buildConfigField 'String', 'GET_STREAM_AUTH_CODE', GET_STREAM_AUTH_CODE
        }
    }
    repositories {
        mavenCentral()
    }
    signingConfigs {
        release {
            v2SigningEnabled false
        }
    }
    packagingOptions {
        pickFirst 'META-INF/core_debug.kotlin_module'
        pickFirst 'META-INF/core_release.kotlin_module'
        pickFirst 'META-INF/library_debug.kotlin_module'
        pickFirst 'META-INF/library_release.kotlin_module'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
}

buildscript {
    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }

    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
}

greendao {
    schemaVersion 18
    generateTests false
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://jitpack.io"
        }
        maven {
            url "https://maven.google.com"
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.firebase:firebase-config:11.8.0'
    implementation 'com.google.firebase:firebase-database:11.8.0'
    implementation 'com.google.firebase:firebase-firestore:11.8.0'
    testCompile 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support:customtabs:27.0.2'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.rahatarmanahmed:circularprogressview:2.5.0'
    implementation 'com.pacioianu.david:ink-page-indicator:1.2.0'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.google.android.apps.muzei:muzei-api:2.0'
    implementation('com.github.ihsanbal:LoggingInterceptor:2.0.5') {
        exclude group: 'org.json', module: 'json'
    }
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.8'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.balysv:material-ripple:1.0.2'
    implementation 'com.google.firebase:firebase-ads:11.8.0'
    implementation project(':admobadapter')
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.facebook.android:audience-network-sdk:4.27.0'
    implementation 'me.jahirfiquitiva.KAUExtensions:ziv:3e3f8d9'
    // Dagger2
    implementation "com.google.dagger:dagger:2.12"
    kapt "com.google.dagger:dagger-compiler:2.12"
    // MultiDex
    implementation 'com.android.support:multidex:1.0.2'
    //implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }
}
repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}
apply plugin: 'com.google.gms.google-services'